// Copyright (c) 2025 Jordan Sterling Farr
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

using System;
using Newtonsoft.Json; // Often used for Cosmos DB serialization
using System.Text.Json; // Required for JsonElement

namespace Nucleus.Abstractions.Models;

/// <summary>
/// Represents a piece of knowledge extracted or generated by a Persona regarding a specific Artifact.
/// This is stored in the PersonaKnowledge container in Cosmos DB.
/// Corresponds to architecture doc: ARCHITECTURE_PERSISTENCE_MODELS.md (assuming)
/// Uses System.Text.Json.JsonElement for AnalysisData to support arbitrary JSON structures defined by Persona configurations.
/// </summary>
public record PersonaKnowledgeEntry
{
    /// <summary>
    /// Unique identifier for the knowledge entry (maps to 'id' in Cosmos DB).
    /// </summary>
    [JsonProperty("id")] // Map to Cosmos DB's required 'id' field
    public required string Id { get; init; }

    /// <summary>
    /// Identifier for the tenant owning this data (used as partition key).
    /// </summary>
    public required string TenantId { get; init; }

    /// <summary>
    /// Identifier for the user associated with this interaction/artifact.
    /// </summary>
    public required string UserId { get; init; }

    /// <summary>
    /// Identifier of the ArtifactMetadata this knowledge pertains to.
    /// </summary>
    public required string ArtifactId { get; init; }

    /// <summary>
    /// Identifier of the specific interaction that generated this knowledge.
    /// </summary>
    public required string InteractionId { get; init; }

    /// <summary>
    /// Identifier of the Persona that generated this knowledge.
    /// </summary>
    public required string PersonaId { get; init; }

    /// <summary>
    /// Identifier of the Agentic Strategy within the Persona that generated this knowledge.
    /// </summary>
    public required string StrategyId { get; init; }

    /// <summary>
    /// Timestamp when the knowledge entry was created.
    /// </summary>
    public DateTimeOffset Timestamp { get; init; } = DateTimeOffset.UtcNow;

    /// <summary>
    /// The actual analysis data or extracted knowledge, stored as a flexible JSON structure.
    /// This allows different Personas to define their own analysis output schema via configuration.
    /// This can be null if no specific analysis was performed or relevant.
    /// </summary>
    public JsonElement? AnalysisData { get; init; }

    // Optional: Add Time-to-Live (TTL) property if automatic expiration is needed in Cosmos DB
    // [JsonProperty("ttl", NullValueHandling = NullValueHandling.Ignore)]
    // public int? Ttl { get; init; }
}
